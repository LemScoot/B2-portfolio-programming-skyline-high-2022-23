/* autogenerated by Processing revision 1286 on 2022-10-11 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class ScreenSaver extends PApplet {

// Liam Scott | 11 Oct 2022 | ScreenSaver

float xpos, ypos, strokeW, pointCount;
int frames = 0;
Lines[] myLines = new Lines [10];

 public void setup() {
  /* size commented out by preprocessor */;
  /* size commented out by preprocessor */;
  background(100, 255);
  xpos = random(width);
  ypos = random(height);
  // My lines
  for (int i = 0; i<myLines.length; i++) {
    myLines[i] = new Lines(random(width), random(height), random(1, 5), random(1, 20));
  }
}

 public void draw() {
  strokeW = random(1, 10);
  pointCount = random(1, 20);
  stroke(0);
  strokeWeight(strokeW);
  if(frames>500) {
    background(100, 255);
    frames = 0;
  }
  // My Lines
  for (int i = 0; i<myLines.length; i++) {
    Lines iLines = myLines[i];
    iLines.display();
  }
  frames ++;
}
class Lines {
  // class variables
  float xpos, ypos, strokeW, lineLength;

  // Constructor
  Lines(float tempX, float tempY, float tempStroke, float tempLength) {
    xpos = tempX;
    ypos = tempY;
    strokeW = tempStroke;
    lineLength = tempLength;
  }

  // Display
   public void display() {
    strokeW = random(1, 2);
    lineLength = random(1, 50);
    stroke(random(200), random(100), random(10));
    if (xpos > width || xpos < 0 || ypos > height || ypos < 0) {
      xpos = random(width);
      ypos = random(height);
    } else {
      if (random(100)>95) {
        strokeWeight(strokeW);
        moveLeft(xpos, ypos, lineLength);
      } else if (random(100)>95) {
        strokeWeight(strokeW);
        moveUp(xpos, ypos, lineLength);
      } else if (random(100)>95) {
        strokeWeight(strokeW);
        moveDown(xpos, ypos, lineLength);
      } else if(random(100)>95) {
        strokeWeight(strokeW);
        moveRight(xpos, ypos, lineLength);
      }
    }
  }
   public void moveRight(float startX, float startY, float moveCount) {
    for (float i = 0; i<moveCount; i++) {
      point(startX + i, startY);
      xpos = startX + i;
      ypos = startY;
    }
  }

   public void moveLeft(float startX, float startY, float moveCount) {
    for (float i = 0; i<moveCount; i++) {
      point(startX - i, startY);
      xpos = startX - i;
      ypos = startY;
    }
  }

   public void moveUp(float startX, float startY, float moveCount) {
    for (float i = 0; i<moveCount; i++) {
      point(startX, startY - i);
      xpos = startX;
      ypos = startY - i;
    }
  }

   public void moveDown(float startX, float startY, float moveCount) {
    for (float i = 0; i<moveCount; i++) {
      point(startX, startY + i);
      xpos = startX;
      ypos = startY + i;
    }
  }
}


  public void settings() { fullScreen(); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "--full-screen", "--bgcolor=#666666", "--stop-color=#cccccc", "ScreenSaver" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
